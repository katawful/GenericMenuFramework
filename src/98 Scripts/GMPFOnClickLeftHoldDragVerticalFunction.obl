scn GMPFOnClickLeftHoldDragVerticalFunction

;;@TYPE~User-Defined Function~
;;@PUBL~Private~
;;@DESC~When the user holds the left mouse button and is on a vertical scroll bar,
;;this function will get the height values of scroll bar + the marker and return said values~
;;@PARA~@string::sShortTile::The menu string that will contain a scroll bar~
string_var sTile

string_var sShortTile 	;@string::sShortTile::The tile without the marker tile

float fMarkerHeight		;@float::fMarkerHeight::Current height of the marker

float fScrollHeight		;@float::fScrollHeight::Height of scroll bar
float fScrollStart		;@float::fScrollStart::Start Y position of scroll bar
float fScrollEnd			;@float::fScrollEnd::End Y position of scroll bar
float fScrollTotal		;@float::fScrollTotal::Total height of scrol bar

Begin Function {sTile}
	
	let sShortTile := sTile[0:-24]

	;; Only work if touching marker
	if eval (sv_Compare "vertical_scroll_marker" sTile == -2)
		return
	endif

	;; Enable dragging
	Let GMF.bDragging := 1

	;; Clamp scrolling to bounds of marker and scrollbar
	Let fMarkerHeight := call GMFGetTileFloatValue (sShortTile + "\vertical_scroll_marker") "height"
	Let fMarkerHeight *= 2
	Let fScrollHeight := call GMFGetTileFloatValue sShortTile "height"

	;; Grab total scroll height
	Let fScrollStart := Call GMFGetTileFloatValue sShortTile "user1"
	Let fScrollEnd := Call GMFGetTileFloatValue sShortTile "user2"
	Let fScrollTotal := fScrollEnd - fScrollStart

	;; Export values
	Let GMF.fGameY := (GetMousePos Y 2) + (fMarkerHeight / 2)
	Let GMF.fSliderPos := fScrollTotal / (fScrollHeight - fMarkerHeight + 0.0001)
	
	sv_Destruct sShortTile

End